@model WebApplication9.Models.Comments

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>
@*Html.ActionLink("Create New", "Create", new { id=})*@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.PostId)
    @Html.HiddenFor(model => model.AuthorId)
    @Html.HiddenFor(model => model.Created)

    <div class="form-horizontal">
        <h4>Comment</h4>
        <hr />
        @*Html.ValidationSummary(true, "", new { class = "text-danger" })*
             <div class="form-group">
                     @Html.LabelFor(model => model.PostId, "PostId", htmlAttributes: new { @class = "control-label col-md-2" })
                     <div class="col-md-10">

                         @Html.ValidationMessageFor(model => model.PostId, "", new { @class = "text-danger" })
                     </div>
                 </div>*@

             <div class="form-group">
                 @Html.LabelFor(model => model.AuthorId, "Author", htmlAttributes: new { @class = "control-label col-md-2" })
                 <div class="col-md-10">
                     @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                         @Html.ValidationMessageFor(model => model.AuthorId, "", new { @class = "text-danger" })
                     </div>
             </div>

            <div class="form-group">
                 @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
                 <div class="col-md-10">
                     @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                     @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                 </div>
             </div>

             @*<div class="form-group">
                     @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                     <div class="col-md-10">

                         @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                     </div>
                 </div>

             @*<div class="form-group">
                     @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
                     <div class="col-md-10">
@Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
                     </div>
                 </div>*@

             @* @if(Model.Author.Roles)*@
        <div class="form-group">
            @Html.LabelFor(model => model.UpdateReason, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UpdateReason, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn-small" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}